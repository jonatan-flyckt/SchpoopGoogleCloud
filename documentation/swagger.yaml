swagger: "2.0"
info:
  title: "Schpoop"
  description: "Platform for memes."
  version: "1.0.0"
host: "TBA"

tags:
- name: "users"
  description: "Registered users"
- name: "memes"
  description: "Created meme posts"
- name: "templates"
  description: "Template images"
- name: "comments"
  description: "Comments on meme posts"
- name: "categories"
  description: "Categories of memes"
  
paths:
  # ============== USERS ==============
  /users:
    post:
      tags:
      - "users"
      summary: "Register a new user"
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "User to be registered"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        200:
          description: "Successful Operation"
        400:
          description: "Bad Request"
        409:
          description: "User already exists"
        500:
          description: "Internal Server Error"
    get:
      tags:
      - "users"
      summary: "Get a list of usernames"
      produces:
      - "application/json"
      parameters:
      - name: "namequery"
        in: "query"
        description: "search query for usernames"
        required: false
        type: "string"
      responses:
        200:
          description: "Successful Operation"
          schema:
            type: "array"
            items:
              type: "string"
        400:
          description: "Bad Request"
        404:
          description: "Not Found"
        500:
          description: "Internal Server Error"
  /users/{username}:
    put:
      tags:
      - "users"
      summary: "Edits a user"
      parameters:
      - name: "username"
        in: "path"
        description: "username of the user to edit"
        required: true
        type: "string"
      - in: "body"
        name: "password"
        description: "new password to update"
        required: true
        schema:
          type: "string"
      responses:
        200:
          description: "Successful Operation"
        400:
          description: "Bad Request"
        404:
          description: "Not Found"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "users"
      summary: "Removes a user"
      parameters:
      - name: "username"
        in: "path"
        description: "username of the user to delete"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful Operation"
        400:
          description: "Bad Request"
        404:
          description: "Not Found"
        500:
          description: "Internal Server Error"
  /users/login-sessions:
    post:
      tags:
      - "users"
      summary: "Creates a new login session"
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "User to be logged in"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        200:
          description: "Successful Operation"
        400:
          description: "Bad Request"
        500:
          description: "Internal Server Error"
  
  # ============== MEMES ==============
  /memes:
    post:
      tags:
      - "memes"
      summary: "Post a new meme"
      parameters:
      - in: "body"
        name: "body"
        description: "Meme to be posted"
        required: true
        schema:
          $ref: "#/definitions/NewMeme"
      responses:
        200:
          description: "Successful Operation"
        400:
          description: "Bad Request"
        500:
          description: "Internal Server Error"
    get:
      tags:
      - "memes"
      summary: "Get a list of memes"
      parameters:
      - name: "namequery"
        in: "query"
        description: "search query for names"
        required: false
        type: "string"
      - name: "templateId"
        in: "query"
        description: "ID of template to get memes by"
        required: false
        type: "string"
      - name: "username"
        in: "query"
        description: "name of user to get memes by"
        required: false
        type: "string"
      - name: "categoryId"
        in: "query"
        description: "ID of category to get memes by"
        required: false
        type: "string"
      responses:
        200:
          description: "Successful Operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Meme"
        400:
          description: "Bad Request"
        404:
          description: "Not Found"
        500:
          description: "Internal Server Error"
  /memes/{memeId}:
    get:
      tags:
      - "memes"
      summary: "Get a meme"
      parameters:
      - name: "memeId"
        in: "path"
        description: "id of the meme to get"
        required: true
        type: "integer"
      responses:
        200:
          description: "Successful Operation"
          schema:
            $ref: "#/definitions/Meme"
        400:
          description: "Bad Request"
        404:
          description: "Not Found"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "memes"
      summary: "Delete a meme"
      parameters:
      - name: "memeId"
        in: "path"
        description: "id of the meme to delete"
        required: true
        type: "integer"
      responses:
        200:
          description: "Successful Operation"
        400:
          description: "Bad Request"
        500:
          description: "Internal Server Error"
      
  # ============== TEMPLATES ==============
  /templates:
    post:
      tags:
      - "templates"
      summary: "Create a new meme template"
      parameters:
      - in: "body"
        name: "body"
        description: "Template to be created"
        required: true
        schema:
          $ref: "#/definitions/NewMemeTemplate"
      responses:
        200:
          description: "Successful Operation"
        400:
          description: "Bad Request"
        500:
          description: "Internal Server Error"
    get:
      tags:
      - "templates"
      summary: "Get a list of memes"
      parameters:
      - name: "username"
        in: "query"
        description: "name of user to get templates by"
        required: false
        type: "string"
      - name: "namequery"
        in: "query"
        description: "search query for names"
        required: false
        type: "string"
      responses:
        200:
          description: "Successful Operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/MemeTemplate"
        400:
          description: "Bad Request"
        404:
          description: "Not Found"
        500:
          description: "Internal Server Error"
  /templates/{templateId}:
    get:
      tags:
      - "templates"
      summary: "Get a template"
      parameters:
      - name: "templateId"
        in: "path"
        description: "id of the template to get"
        required: true
        type: "integer"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/MemeTemplate"
        400:
          description: "Bad Request"
        404:
          description: "Not Found"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "templates"
      summary: "Delete a template"
      parameters:
      - name: "templateId"
        in: "path"
        description: "id of the template to delete"
        required: true
        type: "integer"
      responses:
        200:
          description: "Successful Operation"
        400:
          description: "Bad Request"
        500:
          description: "Internal Server Error"
        
  # ============== COMMENTS ==============
  /comments/{memeId}:
    get:
      tags:
      - "comments"
      summary: "Get all comments on a meme"
      parameters:
      - name: "memeId"
        in: "path"
        description: "Id of meme to get comments of"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful Operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Comment"
        400:
          description: "Bad Request"
        404:
          description: "Not Found"
        500:
          description: "Internal Server Error"
  /comments:
    post:
      tags:
      - "comments"
      summary: "Comment on a meme"
      parameters:
      - in: "body"
        name: "body"
        description: "Comment to be added"
        required: true
        schema:
          $ref: "#/definitions/NewComment"
      responses:
        200:
          description: "Successful Operation"
        400:
          description: "Bad Request"
        500:
          description: "Internal Server Error"
  /comments/{commentId}:
    put:
      tags:
      - "comments"
      summary: "Edit a comment"
      parameters:
      - name: "commentId"
        in: "path"
        description: "Comment to be edited"
        required: true
        type: "integer"
      - in: "body"
        name: "text"
        description: "Edited text"
        required: true
        schema:
          type: "string"
      responses:
        200:
          description: "Successful Operation"
        400:
          description: "Bad Request"
        500:
          description: "Internal Server Error"
    delete:
      tags:
      - "comments"
      parameters:
      - name: "commentId"
        in: "path"
        description: "Comment to be deleted"
        required: true
        type: "integer"
      summary: "Delete a comment"
      responses:
        200:
          description: "Successful Operation"
        400:
          description: "Bad Request"
        500:
          description: "Internal Server Error"
      
  # ============== CATEGORIES ==============
  /categories:
    get:
      tags:
      - "categories"
      summary: "Get a list of categories"
      parameters:
      - name: "namequery"
        in: "query"
        description: "search query for name"
        required: false
        type: "string"
      responses:
        200:
          description: "Successful Operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Category"
        400:
          description: "Bad Request"
        404:
          description: "Not Found"
        500:
          description: "Internal Server Error"
    post:
      tags:
      - "categories"
      summary: "Post a new category"
      parameters:
      - in: "body"
        name: "Category"
        description: "Category to be added"
        required: true
        schema:
          type: "string"
      responses:
        200:
          description: "Successful Operation"
        400:
          description: "Bad Request"
        500:
          description: "Internal Server Error"
          
  # ============== VOTES ==============
  /votes:
    get:
      tags:
      - "votes"
      summary: "Get a user's vote on a meme"
      parameters:
      - name: "memeId"
        in: "query"
        description: "ID of the meme"
        required: true
        type: "integer"
      - name: "username"
        in: "query"
        description: "name of the user"
        required: true
        type: "string"
      responses:
        200:
          description: "Successful Operation"
          schema:
            type: "integer"
        400:
          description: "Bad Request"
        404:
          description: "Not Found"
        500:
          description: "Internal Server Error"
  /votes/{memeId}:
    post:
      tags:
      - "votes"
      summary: "Vote on a meme"
      parameters:
      - name: "memeId"
        in: "path"
        description: "ID of the meme"
        required: true
        type: "integer"      
      - in: "body"
        name: "vote"
        description: "Whether the vote is up or down. (1 for up, -1 for down)"
        required: true
        schema:
          type: "integer"
      responses:
        200:
          description: "Successful Operation"
        400:
          description: "Bad Request"
        500:
          description: "Internal Server Error"
    delete:
      tags: 
      - "votes"
      summary: "Undo a vote on a meme"
      parameters:
      - name: "memeId"
        in: "path"
        description: "ID of the meme"
        required: true
        type: "integer" 
      responses:
        200:
          description: "Successful Operation"
        400:
          description: "Bad Request"
        404:
          description: "Not Found"
        500:
          description: "Internal Server Error"
      
definitions:
  User:
    type: "object"
    required:
    - "username"
    - "password"
    properties:
      username:
        type: "string"
      password:
        type: "string"
  NewMeme:
    type: "object"
    required:
    - "templateId"
    - "username"
    - "imageSource"
    - "isTwitterFormat"
    - "isDeepFried"
    properties:
      templateId:
        type: "integer"
      username:
        type: "string"
      categoryId:
        type: "integer"
      name:
        type: "string"
      imageSource:
        type: "string"
      isTwitterFormat:
        type: "boolean"
      isDeepFried:
        type: "boolean"
      topText:
        type: "string"
      bottomText:
        type: "string"
  Meme:
    type: "object"
    required:
    - "id"
    - "templateId"
    - "username"
    - "imageSource"
    - "votes"
    properties:
      id:
        type: "integer"
      templateId:
        type: "integer"
      username:
        type: "string"
      categoryId:
        type: "integer"
      name:
        type: "string"
      imageSource:
        type: "string"
      votes:
        type: "integer"
      postDate:
        type: "integer"
  NewMemeTemplate:
    type: "object"
    required:
    - "username"
    - "name"
    - "imageSource"
    properties:
      username:
        type: "string"
      name:
        type: "string"
      imageSource:
        type: "string"
  MemeTemplate:
    type: "object"
    required:
    - "id"
    - "username"
    - "name"
    - "imageSource"
    properties:
      id:
        type: "integer"
      username:
        type: "string"
      name:
        type: "string"
      imageSource:
        type: "string"
  NewComment:
    type: "object"
    required:
    - "memeId"
    - "text"
    properties:
      memeId:
        type: "integer"
      parentCommentId:
        type: "string"
      text:
        type: "string"
  Comment:
    type: "object"
    required:
    - "id"
    - "memeId"
    - "username"
    - "text"
    properties:
      id:
        type: "integer"
      memeId:
        type: "integer"
      username:
        type: "string"
      parentCommentId:
        type: "string"
      text:
        type: "string"
      postDate:
        type: "integer"
      lastEdited:
        type: "integer"
  Category:
    type: "object"
    required:
    - "id"
    - "name"
    properties:
      id:
        type: "integer"
      name:
        type: "string"
